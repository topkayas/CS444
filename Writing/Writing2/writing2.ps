%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: writing2.dvi
%%CreationDate: Sun May  1 20:41:40 2016
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic Courier
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter writing2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.05.01:2041
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end TeXDict begin
40258431 52099146 1000 600 600 (writing2.dvi) @start
/Fa 134[29 1[44 2[18 26 26 1[33 33 33 48 18 2[18 33 33
18 29 33 2[33 9[55 3[33 2[41 48 5[22 2[41 1[48 1[41 11[33
3[33 33 1[18 2[17 44[{TeXBase1Encoding ReEncodeFont}30
66.4176 /Times-Italic rf /Fb 138[50 50 50 50 1[50 4[50
1[50 50 2[50 50 50 1[50 1[50 10[50 16[50 25[50 50 2[50
37[{TeXBase1Encoding ReEncodeFont}18 83.022 /Courier
rf /Fc 134[37 37 55 37 42 23 32 32 42 42 42 42 60 23
2[23 42 42 23 37 42 37 1[42 9[69 1[60 46 42 2[51 3[46
3[60 1[51 1[60 55 51 51 1[42 4[28 58[{TeXBase1Encoding ReEncodeFont}36
83.022 /Times-Italic rf /Fd 134[33 2[33 33 18 26 22 2[33
33 1[18 33 1[18 33 1[22 29 33 29 1[29 3[22 1[22 3[63
48 1[41 37 44 1[37 48 48 59 1[48 1[22 1[48 37 41 48 44
1[48 11[33 2[33 33 33 1[17 22 17 44[{TeXBase1Encoding ReEncodeFont}43
66.4176 /Times-Roman rf /Fe 200[29 29 29 29 29 29 29
49[{TeXBase1Encoding ReEncodeFont}7 58.1154 /Times-Roman
rf /Ff 133[37 42 42 60 42 42 23 32 28 42 42 42 42 65
23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28 51 60 60
78 60 60 51 46 55 1[46 60 60 74 51 60 1[28 60 60 46 51
60 55 55 60 5[23 23 42 42 42 42 42 42 42 42 42 42 23
21 28 21 2[28 28 28 35[46 46 2[{TeXBase1Encoding ReEncodeFont}73
83.022 /Times-Roman rf /Fg 134[42 3[46 28 32 37 1[46
42 46 69 3[23 1[42 1[37 3[42 13[46 3[65 5[32 2[51 2[60
8[28 10[23 47[{TeXBase1Encoding ReEncodeFont}20 83.022
/Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writing 2: Writing2) /Subject (CS 444) /Creator (LaTeX with hyperref package) /Author (Sinan Topkaya) /Keywords (cs444 ``WR2'' Writing 2) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.0) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section*.13) cvn /Title (References) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 18 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /P (0) >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0 TeXcolorgray
0 TeXcolorgray 1152 100 a Fg(Operating)29 b(System)i(F)n(eatur)o(e)e
(Comperison:)h(I/O)1643 469 y Ff(by)e(Sinan)g(T)-7 b(opkaya)1571
763 y(CS)30 b(444)d(-)i(Spring)f(2016)150 4651 y(Abstract:)f(This)f
(paper)g(will)h(e)o(xamine)f(I/O)g(and)h(functionalities)e(such)h(as)i
(data)e(structions)g(and)g(algorithms.)f(I)i(will)h(be)150
4800 y(e)o(xamining)23 b(ho)n(w)i(W)m(indo)n(ws)g(implements)f(them)h
(and)g(also)h(ho)n(w)f(FreeBSD)h(implements)e(them)h(then)g(compare)f
(it)i(with)150 4950 y(ho)n(w)k(Linux)f(implements)h(them.)g(This)g
(paper)g(will)h(mainly)f(focus)f(on)i(dif)n(ferent)d(types)j(of)f(de)n
(vices,)g(I/O)g(scheduling)150 5099 y(and)e(the)g(lik)o(e.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(1)p 0 TeXcolorgray 1186 100
a Ff(W)t Fd(R)t(I)t(T)t(I)t(N)t(G)26 b Ff(A)t Fd(S)t(S)t(I)t(G)t(N)t(M)
t(E)t(N)t(T)e Ff(-)h(I)t(/)t(O)g(C)t Fd(O)t(M)t(P)n(A)t(R)t(I)t(S)t(O)t
(N)150 127 y
SDict begin H.S end
 150 127 a 150 127 a
SDict begin 18 H.A end
 150 127 a 150 127 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end

150 127 a 1767 395 a Ff(W)t Fd(I)t(N)t(D)t(O)r(W)t(S)150
422 y
SDict begin H.S end
 150 422 a 150 422 a
SDict begin 18 H.A end
 150 422 a 150 422 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 422
a 269 x Ff(The)j(W)m(indo)n(ws)g(I/O)h(System)f(consists)h(of)g(man)o
(y)e(e)o(x)o(ecuti)n(v)o(e)f(components)g(that)j(together)e(manage)g
(de)n(vices.)150 960 y(I/O)i(System)f(Components)150
1115 y
SDict begin H.S end
 150 1115 a 150 1115 a
SDict begin 18 H.A end
 150 1115 a 150 1115 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 150
1115 a 0 TeXcolorgray 206 1246 a Ff(1\))p 0 TeXcolorgray
40 w(Uniform)f(security)h(and)g(naming)f(across)i(de)n(vices)e(to)i
(protect)f(shareable)f(resources.)150 1264 y
SDict begin H.S end
 150 1264
a 150 1264 a
SDict begin 18 H.A end
 150 1264 a 150 1264 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.2) cvn H.B /DEST pdfmark end
 150 1264 a 0 TeXcolorgray
206 1396 a Ff(2\))p 0 TeXcolorgray 40 w(High-performance)e
(asynchronous)h(pack)o(et-based)h(I/O)i(to)g(allo)n(w)g(for)f(the)h
(implementation)e(of)h(scalable)h(appli-)316 1545 y(cations.)150
1546 y
SDict begin H.S end
 150 1546 a 150 1546 a
SDict begin 18 H.A end
 150 1546 a 150 1546 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.3) cvn H.B /DEST pdfmark end
 150
1546 a 0 TeXcolorgray 206 1695 a Ff(3\))p 0 TeXcolorgray
40 w(Services)c(that)g(allo)n(w)g(dri)n(v)o(ers)f(to)h(be)g(written)f
(in)h(a)h(high-le)n(v)o(el)d(language)g(and)h(eaasily)h(ported)f
(between)g(dif)n(ferent)316 1844 y(machine)j(architectures.)150
1845 y
SDict begin H.S end
 150 1845 a 150 1845 a
SDict begin 18 H.A end
 150 1845 a 150 1845 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.4) cvn H.B /DEST pdfmark end
 150
1845 a 0 TeXcolorgray 206 1993 a Ff(4\))p 0 TeXcolorgray
40 w(Layering)k(and)i(e)o(xtensibility)f(to)h(allo)n(w)h(for)e(the)h
(addition)f(of)h(dri)n(v)o(ers)f(that)h(tranparently)e(modify)h(the)h
(bha)n(vior)316 2143 y(of)d(other)f(dri)n(v)o(ers)g(or)h(de)n(vices,)f
(withour)g(requiring)f(an)o(y)h(changes)g(to)h(the)g(dri)n(v)o(er)f
(whole)g(beha)n(vior)g(or)g(de)n(vice)h(is)316 2292 y(modi\002ed.)150
2293 y
SDict begin H.S end
 150 2293 a 150 2293 a
SDict begin 18 H.A end
 150 2293 a 150 2293 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.5) cvn H.B /DEST pdfmark end
 150
2293 a 0 TeXcolorgray 206 2442 a Ff(5\))p 0 TeXcolorgray
40 w(Dynamic)g(loading)g(and)g(unloading)f(of)h(de)n(vice)h(dri)n(v)o
(ers)e(so)j(that)f(dri)n(v)o(ers)f(can)h(be)g(loaded)e(on)i(demand)e
(and)i(not)316 2591 y(consume)c(system)i(resources)e(when)h(unneeded)
150 2609 y
SDict begin H.S end
 150 2609 a 150 2609 a
SDict begin 18 H.A end
 150 2609 a 150 2609
a
SDict begin [ /View [/XYZ H.V] /Dest (Item.6) cvn H.B /DEST pdfmark end
 150 2609 a 0 TeXcolorgray 206 2741 a Ff(6\))p 0 TeXcolorgray
40 w(Support)c(for)h(Plug)g(and)f(Play)-5 b(,)25 b(where)g(the)g
(system)h(locates)f(and)g(installs)h(dri)n(v)o(ers)e(for)h(ne)n(wly)g
(detected)f(hardw)o(are,)316 2890 y(assigns)30 b(them)g(hardw)o(are)e
(resources)h(the)o(y)g(require,)f(and)h(also)h(allo)n(ws)g
(applications)f(to)h(dis-co)o(v)o(er)e(and)h(acti)n(v)n(ate)316
3040 y(de)n(vice)f(interf)o(aces)150 3041 y
SDict begin H.S end
 150 3041
a 150 3041 a
SDict begin 18 H.A end
 150 3041 a 150 3041 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.7) cvn H.B /DEST pdfmark end
 150 3041 a 0 TeXcolorgray
206 3189 a Ff(7\))p 0 TeXcolorgray 40 w(Support)f(for)h(po)n(wer)f
(management)g(so)i(that)f(the)h(system)f(or)h(indi)n(vidual)d(de)n
(vices)i(can)g(enter)g(lo)n(w)h(po)n(wer)e(states.)150
3207 y
SDict begin H.S end
 150 3207 a 150 3207 a
SDict begin 18 H.A end
 150 3207 a 150 3207 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.8) cvn H.B /DEST pdfmark end
 150
3207 a 0 TeXcolorgray 206 3338 a Ff(8\))p 0 TeXcolorgray
40 w(Support)35 b(for)h(multiple)g(installable)g(\002le)h(systems,)g
(including)e(F)-6 b(A)d(T)j(,)36 b(the)g(CD-R)m(OM)h(\002le)g
(sustem\(CDFS\),)g(the)316 3488 y(Uni)n(v)o(ersal)28
b(Disk)g(F)o(ormat)g(\(UDF\))h(\002le)g(system,)f(and)g(the)h(W)m(indo)
n(ws)e(\002le)j(system)e(\(NTFS\))150 3506 y
SDict begin H.S end
 150 3506
a 150 3506 a
SDict begin 18 H.A end
 150 3506 a 150 3506 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.9) cvn H.B /DEST pdfmark end
 150 3506 a 0 TeXcolorgray
206 3637 a Ff(9\))p 0 TeXcolorgray 40 w(W)m(indo)n(ws)41
b(Management)f(Instrumentation)g(\(WMI\))h(support)g(and)h
(diagnosability)e(so)i(that)g(dri)n(v)o(ers)f(can)h(be)316
3787 y(managed)27 b(and)h(monitored)e(through)g(WMI)j(applications)f
(and)g(scripts.[)p 0 1 0 TeXcolorrgb 2506 3787 a
SDict begin H.S end
 2506
3787 a 0 1 0 TeXcolorrgb Ff(1)p 0 1 0 TeXcolorrgb 2546
3730 a
SDict begin H.R end
 2546 3730 a 2546 3787 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[1]) cvn H.B /ANN pdfmark end
 2546 3787 a 0 TeXcolorgray
Ff(])150 4073 y(T)-7 b(o)33 b(implement)f(the)i(abo)o(v)o(e)d(features)
i(W)m(indo)n(ws)f(I/O)i(system)f(consists)h(e)o(x)o(ecuti)n(v)o(e)d
(components)g(as)j(well)f(as)h(de)n(vice)150 4222 y(dri)n(v)o(ers.)150
4492 y(The)f(I/O)g(system)g(includes)g(the)g(hardw)o(are)e(abstraction)
h(layer\(HAL\))g(at)h(the)g(bottom,)f(this)i(insulates)f(dri)n(v)o(ers)
f(from)150 4641 y(the)j(speci\002cs)f(of)h(the)f(processor)f(and)h
(interrupt)f(controller)g(by)h(pro)o(viding)e(APIs)j(that)g(hide)f(dif)
n(ferentces)e(between)150 4791 y(platforms.)24 b(W)-7
b(e)27 b(can)f(think)f(of)g(HAL)h(as)h(the)e(b)n(us)h(dri)n(v)o(er)f
(for)g(all)h(the)g(de)n(vices.)f(The)g(ne)o(xt)g(layer)g(includes)g
(the)h(dif)n(ferent)150 4940 y(Dri)n(v)o(ers,)f(these)h(dri)n(v)o(ers)f
(are)h(then)g(accessed)g(by)g(the)g(I/O)g(system)h(layer)e(which)h
(include,)f(WDM)i(WMI)f(routines,)f(PnP)150 5089 y(manager)m(,)h(Po)n
(wer)i(manager)f(and)h(I/O)h(manager)-5 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(2)p 0 TeXcolorgray 150 100
a Ff(The)28 b(I/O)h(system)g(layer)f(w)o(ork)f(closesly)i(with)g(each)f
(other)-5 b(.)150 369 y(W)m(indo)n(ws)29 b(Management)e
(Instrumentation)g(support)h(routines,)h(called)g(the)h(W)m(indo)n(ws)e
(Dri)n(v)o(er)h(Model\(WDM\))f(WMI)150 519 y(pro)o(vider)m(,)g(allo)n
(w)k(de)n(vice)f(dri)n(v)o(ers)f(to)h(indirectly)g(act)h(as)g(pro)o
(viders.)d(I/O)j(manager)d(is)k(the)e(heart)g(of)g(the)h(I/O)g(system.)
150 668 y(It)j(connects)e(applications)h(and)g(system)h(components)d
(to)j(virtual,)e(logical,)h(and)g(physical)g(de)n(vices,)f(and)i(it)g
(de\002nes)150 817 y(the)26 b(infrastructure)f(that)h(support)f(de)n
(vice)h(dri)n(v)o(ers.)f(The)h(Pnp)g(manager)f(w)o(orks)h(closely)g
(with)g(the)h(I/O)f(manager)f(and)h(a)150 967 y(type)g(of)h(de)n(vice)f
(dri)n(v)o(er)g(called)g(a)i(b)n(us)f(dri)n(v)o(er)e(to)i(guide)f(the)h
(allocation)f(of)h(hardw)o(are)e(resources)h(as)i(well)f(as)h(to)f
(detect)150 1116 y(and)h(respond)f(to)i(the)f(arri)n(v)n(al)g(and)g
(remo)o(v)n(al)f(of)h(hardw)o(are)f(de)n(vices.)h(The)g(po)n(wer)g
(manager)f(also)i(w)o(orks)f(closely)g(with)150 1266
y(the)i(I/O)h(manager)d(and)i(the)g(PnP)g(manager)f(to)h(guide)g(the)g
(system,)g(as)h(well)f(as)h(indi)n(vidual)e(de)n(vice)g(dri)n(v)o(ers,)
g(through)150 1415 y(po)n(wer)n(-state)f(transitions.)150
1685 y(W)m(indo)n(ws)c(supports)f(a)i(wide)g(range)e(of)h(de)n(vice)g
(dri)n(v)o(er)f(types)h(and)g(programming)d(en)m(vironment.)g(These)j
(dri)n(v)o(ers)g(could)150 1834 y(be)k(user)n(-mode)f(or)h(k)o
(ernel-mode)e(dri)n(v)o(ers.)150 2234 y Fc(W)-5 b(indows)29
b(Driver)o(s)150 2262 y
SDict begin H.S end
 150 2262 a 150 2262 a
SDict begin 18 H.A end
 150 2262
a 150 2262 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.3) cvn H.B /DEST pdfmark end
 150 2262 a 268 x Ff(User)e(mode)f(dri)n(v)o(ers)g(include)
g(windo)n(ws)g(subsystem)g(dri)n(v)o(ers,)g(that)h(translate)f(de)n
(vice-indipendent)d(graphics)j(requests)150 2679 y(to)i(printer)n
(-speci\002c)f(commands.)f(These)i(commands)e(are)i(then)g(typically)f
(forw)o(arded)f(to)i(a)g(k)o(ernel-mode)e(port)h(dri)n(v)o(er)150
2829 y(such)33 b(as)i(the)f(uni)n(v)o(ersal)e(serial)i(b)n(us\(USB\))g
(printer)e(port)i(dri)n(v)o(er)-5 b(.)32 b(User)n(-Mode)h(Dri)n(v)o(er)
f(Frame)n(w)o(ork\(UMDF\))g(is)i(also)150 2978 y(another)23
b(user)n(-mode)f(dri)n(v)o(er)g(that)i(windo)n(ws)g(supports.)e(These)i
(dri)n(v)o(ers)f(are)h(hardw)o(are)e(de)n(vice)h(dri)n(v)o(ers)g(that)h
(run)g(in)g(user)150 3128 y(mode.)j(The)o(y)h(also)h(communicate)d(to)j
(the)f(k)o(ernel-mode.)150 3397 y(K)n(ernel-mode)e(dri)n(v)o(ers)h
(include)h(WDM)h(dri)n(v)o(er)m(,)d(Layered)h(Dri)n(v)o(er)-5
b(.)150 3666 y(WDM)25 b(Dri)n(v)o(ers)e(are)h(de)n(vice)f(dri)n(v)o
(ers.)g(WDM)i(includes)e(support)g(for)g(W)m(indo)n(ws)h(po)n(wer)f
(management,)f(Plug)h(and)h(Play)-5 b(,)150 3816 y(and)28
b(WMI,)h(and)f(most)g(Plug)g(and)g(Play)h(dri)n(v)o(ers)e(adhere)h(to)g
(WDM.)h(There)f(are)g(3)h(types)f(of)g(WDM)i(dri)n(v)o(ers:[)p
0 1 0 TeXcolorrgb 3485 3816 a
SDict begin H.S end
 3485 3816 a 0 1 0 TeXcolorrgb
Ff(1)p 0 1 0 TeXcolorrgb 3524 3759 a
SDict begin H.R end
 3524 3759 a 3524
3816 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[1]) cvn H.B /ANN pdfmark end
 3524 3816 a 0 TeXcolorgray Ff(])150 3970 y
SDict begin H.S end
 150
3970 a 150 3970 a
SDict begin 18 H.A end
 150 3970 a 150 3970 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.10) cvn H.B /DEST pdfmark end
 150 3970 a 0
TeXcolorgray 206 4102 a Ff(1\))p 0 TeXcolorgray 40 w(Bus)h(dri)n(v)o
(ers)e(manage)g(a)i(logical)e(or)h(physical)f(b)n(us.)i(Examples)e(of)h
(b)n(uses)g(include)g(PCMCIA,)g(PCI,)h(USB,)g(and)316
4251 y(IEEE)37 b(1394.)f(A)j(b)n(us)f(dri)n(v)o(er)e(is)j(responsible)d
(for)h(detecting)g(and)g(informing)e(the)j(PnP)g(manager)f(of)g(de)n
(vices)316 4401 y(attached)28 b(to)g(the)h(b)n(us)g(it)g(controls)e(as)
j(well)f(as)g(managing)d(the)j(po)n(wer)e(setting)i(of)f(the)g(b)n(us)
150 4419 y
SDict begin H.S end
 150 4419 a 150 4419 a
SDict begin 18 H.A end
 150 4419 a 150 4419
a
SDict begin [ /View [/XYZ H.V] /Dest (Item.11) cvn H.B /DEST pdfmark end
 150 4419 a 0 TeXcolorgray 206 4550 a Ff(2\))p 0 TeXcolorgray
40 w(Function)21 b(dri)n(v)o(ers)g(manage)f(a)j(particular)d(type)i(of)
f(de)n(vice.)g(Bus)i(dri)n(v)o(ers)e(present)g(de)n(vices)g(to)i
(function)d(dri)n(v)o(ers)h(via)316 4700 y(the)26 b(PnP)h(manager)-5
b(.)24 b(The)i(function)f(dri)n(v)o(er)f(is)j(the)f(dri)n(v)o(er)f
(that)h(e)o(xports)f(the)h(operational)e(interf)o(ace)h(of)h(the)g(de)n
(vice)316 4849 y(to)31 b(the)f(operating)f(system.)i(In)f(general,)f
(it)i(is)h(the)f(dri)n(v)o(er)e(with)h(the)h(most)g(kno)n(wledge)d
(about)i(the)g(operation)f(of)316 4999 y(the)g(de)n(vice.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(3)p 0 TeXcolorgray 150 0 a
SDict begin H.S end

150 0 a 150 0 a
SDict begin 18 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.12) cvn H.B /DEST pdfmark end
 150 0 a 0 TeXcolorgray
205 100 a Ff(3\))p 0 TeXcolorgray 41 w(Filter)19 b(dri)n(v)o(ers)f
(logically)g(layer)g(either)g(abo)o(v)o(e)f(or)i(belo)n(w)f(function)f
(dri)n(v)o(er)m(,)g(augmenting)f(or)j(changing)d(the)j(beha)n(vior)316
249 y(of)31 b(a)g(de)n(vice)f(or)g(another)g(dri)n(v)o(er)-5
b(.)29 b(F)o(or)i(e)o(xample,)e(a)i(k)o(e)o(yboard)d(capture)i(utility)
h(could)f(be)g(implemented)f(with)i(a)316 399 y(k)o(e)o(yboard)26
b(\002lter)j(dri)n(v)o(er)e(that)h(layers)h(abo)o(v)o(e)e(the)h(k)o(e)o
(yboard)e(function)h(dri)n(v)o(er)-5 b(.)150 685 y(Support)26
b(for)i(an)g(indi)n(vidual)e(piece)i(of)f(hardw)o(are)g(is)i(often)e
(di)n(vided)f(among)h(se)n(v)o(eral)g(dri)n(v)o(ers,)g(each)g(pro)o
(viding)f(a)i(part)150 834 y(of)h(the)h(functionality)d(required)h(to)i
(mak)o(e)f(the)g(de)n(vice)g(w)o(ork)g(properly)-5 b(.)27
b(In)i(addition)f(to)i(WDM)g(b)n(us)g(dri)n(v)o(er)m(,)d(function)150
983 y(dri)n(v)o(er)m(,)21 b(and)i(\002lter)h(dri)n(v)o(er)m(,)d(hardw)o
(are)h(support)g(might)h(be)g(split)h(between)f(the)g(layered)f(dri)n
(v)o(er)g(and)h(the)o(y)g(are)g(as)h(follo)n(ws:)150
1133 y([)p 0 1 0 TeXcolorrgb 178 1133 a
SDict begin H.S end
 178 1133 a 0 1 0
TeXcolorrgb Ff(1)p 0 1 0 TeXcolorrgb 219 1076 a
SDict begin H.R end
 219 1076
a 219 1133 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[1]) cvn H.B /ANN pdfmark end
 219 1133 a 0 TeXcolorgray Ff(])150 1282
y
SDict begin H.S end
 150 1282 a 150 1282 a
SDict begin 18 H.A end
 150 1282 a 150 1282 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.13) cvn H.B /DEST pdfmark end
 150 1282
a 0 TeXcolorgray 206 1419 a Ff(1\))p 0 TeXcolorgray 40
w(Class)32 b(dri)n(v)o(ers)d(implement)h(the)g(I/O)h(processing)e(for)h
(a)h(particular)f(class)h(of)f(de)n(vices,)g(such)h(as)g(disk,)f(k)o(e)
o(yboard)316 1568 y(or)f(CD-R)m(OM,)h(where)f(the)h(hardw)o(are)e
(interf)o(aces)i(ha)n(v)o(e)f(been)g(standarlized,)f(so)i(one)f(dri)n
(v)o(er)f(can)i(serv)o(e)f(de)n(vices)316 1718 y(from)e(a)i(wide)g(v)n
(ariety)e(of)i(muf)o(acturers)150 1736 y
SDict begin H.S end
 150 1736 a 150
1736 a
SDict begin 18 H.A end
 150 1736 a 150 1736 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.14) cvn H.B /DEST pdfmark end
 150 1736 a 0 TeXcolorgray
206 1867 a Ff(2\))p 0 TeXcolorgray 40 w(Miniclass)g(dri)n(v)o(ers)e
(implement)g(I/O)i(processing)e(that)i(is)g(v)o(endor)e(de\002ned)g
(for)h(a)h(particular)e(class)j(of)e(de)n(vices)150 1885
y
SDict begin H.S end
 150 1885 a 150 1885 a
SDict begin 18 H.A end
 150 1885 a 150 1885 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.15) cvn H.B /DEST pdfmark end
 150 1885
a 0 TeXcolorgray 206 2017 a Ff(3\))p 0 TeXcolorgray 40
w(Port)d(de)n(vices)g(implement)f(the)h(processing)f(of)h(an)g(I/O)h
(request)e(speci\002c)i(to)f(a)h(type)f(of)g(I/O)g(port,)f(such)h(as)h
(SA)-9 b(T)h(A,)316 2166 y(and)28 b(are)g(implemented)f(as)i(k)o
(ernel-mode)d(libraries)i(of)g(functions)f(rather)h(than)g(actual)g(de)
n(vice)g(dri)n(v)o(ers.)150 2184 y
SDict begin H.S end
 150 2184 a 150 2184
a
SDict begin 18 H.A end
 150 2184 a 150 2184 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.16) cvn H.B /DEST pdfmark end
 150 2184 a 0 TeXcolorgray 206
2316 a Ff(4\))p 0 TeXcolorgray 40 w(Miniport)g(dri)n(v)o(ers)g(map)g(a)
i(generic)e(I/O)h(request)f(to)h(a)h(type)e(of)h(port)f(into)h(an)g
(adapter)f(type,)g(such)h(as)h(a)f(speci\002c)316 2465
y(netwrok)j(adapter)-5 b(.)33 b(Miniport)g(dri)n(v)o(ers)f(are)i
(actual)f(de)n(vice)g(dri)n(v)o(ers)g(that)h(import)e(the)i(functions)e
(supplied)h(by)g(a)316 2614 y(port)28 b(dri)n(v)o(er)-5
b(.)150 2900 y(I/O)32 b(Processing)f(depends)g(of)g(the)h(type)f(of)h
(I/O)g(in)g(W)m(indo)n(ws.)f(F)o(or)g(e)o(xample)g(asynchronous)d(I/O)
33 b(allo)n(ws)f(an)f(appli-)150 3050 y(cation)d(to)g(issue)h(multiple)
f(I/O)h(requests)f(and)g(continue)e(e)o(x)o(ecuting)h(while)h(the)g(de)
n(vice)g(performs)f(the)h(I/O)h(operation.)150 3199 y(Synchronous)h
(I/O)i(is)i(when)d(the)i(application)e(thread)g(w)o(aits)j(while)e(the)
h(de)n(vice)e(performs)g(the)h(data)h(operation)d(and)150
3349 y(returns)35 b(a)g(status)h(code)f(when)g(the)g(I/O)h(is)g
(complete.)e(When)i(used)f(in)g(their)h(simplest)f(form,)f(W)m(indo)n
(ws)h(ReadFile)150 3498 y(and)28 b(WriteFile)i(functions)e(are)h(e)o(x)
o(ecuted)e(synchronously)-5 b(.)25 b(Re)o(gardless)j(of)h(the)g(type)g
(of)f(I/O)h(request,)g(internally)e(I/O)150 3648 y(operations)i(issued)
i(to)g(a)g(dri)n(v)o(er)e(on)i(behalf)e(of)i(the)g(application)e(are)h
(performed)f(asynchronously)-5 b(,)26 b(that)31 b(is,)h(once)e(an)150
3797 y(I/O)f(request)f(has)g(ben)g(initiated,)g(the)h(de)n(vice)e(dri)n
(v)o(er)g(returns)h(to)h(the)f(I/O)h(system.)150 4067
y(Another)h(usefull)g(I/O)h(is)h(called)f(the)f(f)o(ast)i(I/O.)f(This)g
(is)h(a)f(special)g(mechanism)f(that)h(allo)n(ws)g(I/O)g(system)g(to)g
(bypass)150 4216 y(generating)i(an)h(IRP)i(and)e(isntead)g(go)g
(directly)g(to)h(the)g(dri)n(v)o(er)e(stack)i(to)g(complete)e(an)i(I/O)
g(request.)f(Mapped)f(File)150 4365 y(I/O)c(is)h(an)f(important)e
(feature)h(of)h(the)g(I/O)g(system,)g(one)f(that)h(the)g(I/O)h(system)f
(and)f(the)h(memory)e(manager)h(produce)150 4515 y(jointly)-5
b(.)23 b(Mapped)f(\002le)i(I/O)g(refers)g(to)f(ability)h(to)g(vie)n(w)f
(a)i(\002le)f(residing)f(on)g(disk)h(as)g(part)g(of)f(a)h(process)g
(vitual)f(memoery)-5 b(.)150 4664 y(A)24 b(program)d(therefore)h(can)h
(access)h(the)f(\002le)i(as)f(a)g(lar)o(ge)e(array)g(without)h(b)n(uf)n
(fering)e(data.)i(Scattered/Gather)f(I/O)i(is)g(also)150
4814 y(supported)29 b(by)h(windo)n(ws.)g(This)h(is)h(a)f(high)f
(performance)e(I/O)j(and)g(a)n(v)n(alaible)f(through)f(ReadFileScatter)
i(and)f(Write)150 4963 y(FileGather)e(functions.)150
5014 y
SDict begin H.S end
 150 5014 a 150 5014 a
SDict begin 18 H.A end
 150 5014 a 150 5014 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-1) cvn H.B /DEST pdfmark end
 150
5014 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(4)p 0 TeXcolorgray 150 105
a
SDict begin H.S end
 150 105 a 150 105 a
SDict begin 18 H.A end
 150 105 a 150 105 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.1) cvn H.B /DEST pdfmark end
 150 105 a 18
w Ff(/)18 b(/)76 b(t)8 b(H)g(I)g(S)68 b(I)9 b(S)55 b(T)m(H)m(E)64
b(r)16 b(e)i(a)f(d)g(f)g(i)g(l)g(e)h(s)f(c)g(a)h(t)f(t)g(e)g(r)81
b(f)14 b(u)g(n)g(c)g(t)g(i)g(o)g(n)53 b(T)l(H)l(A)l(T)f(I)9
b(S)55 b(U)l(S)l(E)l(D)42 b(B)-5 b(Y)42 b(T)m(H)m(E)g(S)l(C)l(A)l(T)l
(H)l(E)l(R)12 b(/)c(G)-5 b(A)g(T)g(H)g(E)g(R)53 b(I)24
b(/)9 b(O)150 254 y
SDict begin H.S end
 150 254 a 150 254 a
SDict begin 18 H.A end
 150 254 a 150
254 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.2) cvn H.B /DEST pdfmark end
 150 254 a 150 403 a
SDict begin H.S end
 150 403 a 150 403 a
SDict begin 18 H.A end
 150 403
a 150 403 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.3) cvn H.B /DEST pdfmark end
 150 403 a -5 w Ff(B)-5 b(O)g(O)g(L)43 b(WINAPI)62
b(R)14 b(e)g(a)g(d)g(F)g(i)g(l)g(e)g(S)g(c)g(a)g(t)g(t)g(e)g(r)k(\()150
553 y
SDict begin H.S end
 150 553 a 150 553 a
SDict begin 18 H.A end
 150 553 a 150 553 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.4) cvn H.B /DEST pdfmark end
 150 553
a 259 564 42 5 v 160 w Ff(I)9 b(n)p 398 564 V 403 w(H)-6
b(A)g(N)g(D)g(L)g(E)751 b(h)11 b(F)g(i)g(l)g(e)37 b(,)150
702 y
SDict begin H.S end
 150 702 a 150 702 a
SDict begin 18 H.A end
 150 702 a 150 702 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.5) cvn H.B /DEST pdfmark end
 150 702
a 259 713 42 5 v 160 w Ff(I)9 b(n)p 398 713 V 407 w(F)n(I)n(L)n(E)p
964 713 V 37 w(S)n(E)n(G)n(M)n(E)n(N)n(T)p 1382 713 V
36 w(E)n(L)n(E)n(M)n(E)n(N)n(T)56 b(a)9 b(S)g(e)g(g)g(m)g(e)g(n)g(t)g
(A)g(r)g(r)g(a)g(y)21 b([)14 b(])29 b(,)150 852 y
SDict begin H.S end
 150
852 a 150 852 a
SDict begin 18 H.A end
 150 852 a 150 852 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.6) cvn H.B /DEST pdfmark end
 150 852 a 259 863
42 5 v 160 w Ff(I)9 b(n)p 398 863 V 398 w(D)-11 b(W)g(O)g(R)g(D)794
b(n)7 b(N)g(u)g(m)g(b)g(e)g(r)g(O)g(f)f(B)h(y)f(t)g(e)h(s)g(T)f(o)g(R)h
(e)f(a)g(d)21 b(,)150 1001 y
SDict begin H.S end
 150 1001 a 150 1001 a
SDict begin 18 H.A end
 150
1001 a 150 1001 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.7) cvn H.B /DEST pdfmark end
 150 1001 a 259 1012 42 5 v 160 w Ff(R)10
b(e)g(s)g(e)g(r)g(v)g(e)g(d)p 700 1012 V 100 w(L)-8 b(P)g(D)g(W)g(O)g
(R)g(D)702 b(l)10 b(p)g(R)g(e)g(s)g(e)g(r)g(v)g(e)g(d)37
b(,)150 1151 y
SDict begin H.S end
 150 1151 a 150 1151 a
SDict begin 18 H.A end
 150 1151 a 150 1151
a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.8) cvn H.B /DEST pdfmark end
 150 1151 a 261 1162 42 5 v 164 w Ff(I)11 b(n)g(o)g(u)g(t)p
546 1162 V 260 w(L)m(P)m(O)m(V)m(E)m(R)m(L)m(A)m(P)m(P)m(E)m(D)456
b(l)11 b(p)g(O)g(v)g(e)g(r)g(l)g(a)g(p)g(p)g(e)g(d)150
1300 y
SDict begin H.S end
 150 1300 a 150 1300 a
SDict begin 18 H.A end
 150 1300 a 150 1300 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.9) cvn H.B /DEST pdfmark end
 150
1300 a 16 w Ff(\))16 b(;)p 0 TeXcolorgray 0 TeXcolorgray
150 1750 a Fc(F)-5 b(r)m(eeBSD)150 1778 y
SDict begin H.S end
 150 1778 a
150 1778 a
SDict begin 18 H.A end
 150 1778 a 150 1778 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.4) cvn H.B /DEST pdfmark end
 150 1778 a 268 x Ff(Similar)36
b(to)g(W)m(indo)n(ws,)g(the)g(threads)f(of)h(a)h(process)e(operate)g
(in)i(either)e(user)h(mode)g(or)f(k)o(ernel)h(mode.)f(The)g(k)o(ernel)
150 2195 y(state)26 b(includes)e(parameters)g(to)h(the)g(current)f
(system)h(call,)h(and)e(ha)n(v)o(e)g(2)i(primary)d(strctures;)i
(process)g(structure,)f(thread)150 2345 y(structure.)e(FreeBSD)i
(supposers)f(transparent)e(multiprogramming,)e(it)25
b(does)e(so)g(by)g(conte)o(xt)g(switching,)f(by)h(swithcing)150
2494 y(between)31 b(the)g(e)o(x)o(ecution)f(conte)o(xt)g(of)h(the)h
(threads)f(within)g(the)h(same)f(or)h(dif)n(ferent)e(process.)g(A)i
(mechanism)f(is)h(also)150 2643 y(pro)o(vided)26 b(for)i(scheduling)f
(the)h(e)o(x)o(ecution)e(of)j(threads,)e(that)i(is)g(for)f(deciding)f
(which)h(one)g(to)h(e)o(x)o(ecute)e(ne)o(xt.)150 2913
y(No)n(w)j(I)h(will)g(\002rst)g(write)f(about)g(ho)n(w)g(FreeBSD)h
(implements)e(Process)h(then)g(I)h(will)g(talk)f(about)g(ho)n(w)f(it)j
(implements)150 3062 y(threads)c(and)g(ho)n(w)g(it)h(deal)f(with)h
(scheduling.)150 3080 y
SDict begin H.S end
 150 3080 a 150 3080 a
SDict begin 18 H.A end
 150 3080
a 150 3080 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.5) cvn H.B /DEST pdfmark end
 150 3080 a 252 x Fc(Pr)l(ocesses:)45 b Ff(First)31
b(I)g(will)g(write)g(about)f(the)g(Process)h(strcuture)f(then)g(I)h
(will)g(brie\003y)f(e)o(xplain)f(what)i(the)o(y)e(are,)i(later)f(I)150
3481 y(will)f(write)g(more)e(about)h(the)g(state)h(of)f(a)h(process.)f
(Ev)o(ery)f(running)f(command)g(starts)j(at)g(least)g(one)f(ne)n(w)g
(process)g(and)150 3631 y(there)i(are)g(a)h(number)e(of)h(system)g
(processes)h(that)f(are)g(run)g(by)g(FreeBSD.)h(Each)f(process)g(is)h
(uniquely)e(identi\002es)h(by)150 3780 y(a)j(number)e(called)h(PID.)h
(Similar)g(to)g(\002les)g(each)f(process)h(has)f(one)h(o)n(wner)e(and)h
(group,)f(and)h(the)h(o)n(wner)e(and)h(group)150 3930
y(permissions)22 b(are)h(used)g(to)g(determine)f(which)g(\002les)i(and)
e(de)n(vices)h(the)g(process)f(can)h(open.)f(The)g(command)f
Fb(\045ps)i Ff(allo)n(ws)150 4079 y(the)30 b(user)f(to)h(display)g(a)g
(list)h(of)e(the)h(currently)e(running)f(processes,)j(their)f(PIDs,)h
(and)g(ho)n(w)f(much)g(memory)f(the)o(y)h(are)150 4228
y(using,)f(this)i(is)g(the)e(structure)h(of)f(a)i(process.)e(The)g
(processes)h(can)g(be)g(scheduled,)e(to)i(specify)f(which)h(process)f
(to)h(run)150 4378 y(\002rst)g(or)f(ne)o(xt.[)p 0 1 0
TeXcolorrgb 598 4378 a
SDict begin H.S end
 598 4378 a 0 1 0 TeXcolorrgb Ff(2)p
0 1 0 TeXcolorrgb 638 4321 a
SDict begin H.R end
 638 4321 a 638 4378 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[2]) cvn H.B /ANN pdfmark end
 638
4378 a 0 TeXcolorgray Ff(])150 4647 y(Process)h(Structure:)150
4785 y
SDict begin H.S end
 150 4785 a 150 4785 a
SDict begin 18 H.A end
 150 4785 a 150 4785 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.17) cvn H.B /DEST pdfmark end
 150
4785 a 0 TeXcolorgray 206 4933 a Ff(1\))p 0 TeXcolorgray
40 w(Process)g(identi\002cation:)e(the)i(PID)f(and)g(the)h(parent)e
(PID)150 4951 y
SDict begin H.S end
 150 4951 a 150 4951 a
SDict begin 18 H.A end
 150 4951 a 150
4951 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.18) cvn H.B /DEST pdfmark end
 150 4951 a 0 TeXcolorgray 206 5083 a Ff(2\))p
0 TeXcolorgray 40 w(Signal)h(Slate:)h(Signals)g(pending)e(deli)n(v)o
(ery)f(and)i(summary)f(of)i(signal)f(actions)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.5) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(5)p 0 TeXcolorgray 150 0 a
SDict begin H.S end

150 0 a 150 0 a
SDict begin 18 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.19) cvn H.B /DEST pdfmark end
 150 0 a 0 TeXcolorgray
205 100 a Ff(3\))p 0 TeXcolorgray 41 w(T)m(racing:)27
b(Process)i(tracing)f(information)150 118 y
SDict begin H.S end
 150 118 a
150 118 a
SDict begin 18 H.A end
 150 118 a 150 118 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.20) cvn H.B /DEST pdfmark end
 150 118 a 0 TeXcolorgray
206 249 a Ff(4\))p 0 TeXcolorgray 40 w(T)m(imers:)g(Real-T)m(ime)h
(timer)f(and)g(CPU-utilization)g(counters)150 535 y(Process)36
b(states)i(inlude)d(NEW)-8 b(,)37 b(NORMAL)f(and)g(ZOMBIE)g(states.)h
(NEW)g(speci\002es)g(that)f(there)g(is)h(a)f(under)o(going)150
685 y(process)25 b(creation,)g(NORMAL)h(speci\002es)g(that)g(threads)g
(will)g(be)g(runnable,)e(sleeping)h(or)g(stopped,)g(and)g(the)h(ZOMBIE)
150 834 y(state)32 b(is)g(when)e(the)h(process)g(in)g(under)o(going)c
(termination.)i(A)j(process)e(may)h(create)f(a)i(ne)n(w)e(process)h
(that)g(is)h(a)f(cop)o(y)150 983 y(of)26 b(the)g(original)f(by)g(using)
h(the)g(fork)f(system)h(call.)g(The)g(fork)f(call)i(return)e(twice:)h
(once)f(in)i(the)f(parent)f(process,)g(where)150 1133
y(the)h(return)e(v)n(alue)i(is)g(the)g(process)f(identi\002er)h(of)f
(the)h(child,)f(and)g(once)g(in)h(the)g(child)g(process,)f(where)g(the)
h(return)e(v)n(alue)150 1282 y(is)29 b(0.)150 1552 y(The)d(k)o(ernel)g
(be)o(gins)g(by)g(allocating)f(memory)g(for)h(the)h(ne)n(w)f(process)g
(and)g(thread)g(entries.)g(These)g(thread)g(and)g(process)150
1701 y(entries)32 b(are)f(initialized)h(in)g(the)g(steps:)g(One)g(part)
f(is)i(copied)d(from)h(the)h(parent')-5 b(s)31 b(corresponding)d
(structure,)j(another)150 1851 y(part)g(is)h(zeroed,)e(and)h(the)g
(rest)h(is)g(e)o(xplicitly)e(initilized.)h(The)g(zeroed)f(\002elds)i
(include)e(recent)h(CPU)i(utilization,)d(w)o(ait)150
2000 y(channel,)23 b(sw)o(ap)h(and)f(sleep)i(time,)f(timers,)f
(tracing,)g(and)h(pending-signal)d(information.)g(The)j(copied)f
(portions)g(include)150 2150 y(all)29 b(the)g(pri)n(vilages)e(and)h
(limitation)g(inherited)f(from)h(the)g(parent.)150 2167
y
SDict begin H.S end
 150 2167 a 150 2167 a
SDict begin 18 H.A end
 150 2167 a 150 2167 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.6) cvn H.B /DEST pdfmark end
 150 2167
a 252 x Fc(Thr)m(eads:)42 b Ff(Thread)27 b(Structure)150
2557 y
SDict begin H.S end
 150 2557 a 150 2557 a
SDict begin 18 H.A end
 150 2557 a 150 2557 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.21) cvn H.B /DEST pdfmark end
 150
2557 a 0 TeXcolorgray 206 2705 a Ff(1\))p 0 TeXcolorgray
40 w(Scheduling:)g(The)h(thread)g(priority)-5 b(,)26
b(use-mode)h(scheduling)g(priority)-5 b(,)27 b(recent)h(CPU)i
(utilization)e(and)g(amount)f(of)316 2854 y(time)e(spent)f(sleeping;)g
(the)h(run)f(state)h(of)f(a)h(thread;)f(additional)f(status)j(\003ags;)
f(if)g(the)f(thread)g(is)i(sleeping,)d(the)i(w)o(ait)316
3004 y(channel,)h(the)i(identify)e(of)i(the)f(e)n(v)o(ent)g(for)g
(which)g(thread)g(is)h(w)o(aiting)g(and)f(a)h(pointer)e(to)i(a)g
(string)f(describing)g(the)316 3153 y(e)n(v)o(ent)150
3154 y
SDict begin H.S end
 150 3154 a 150 3154 a
SDict begin 18 H.A end
 150 3154 a 150 3154 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.22) cvn H.B /DEST pdfmark end
 150
3154 a 0 TeXcolorgray 206 3303 a Ff(2\))p 0 TeXcolorgray
40 w(TSB:)i(the)g(user)n(-)f(and)g(k)o(ernel-mode)e(e)o(x)o(ecution)g
(states)150 3318 y
SDict begin H.S end
 150 3318 a 150 3318 a
SDict begin 18 H.A end
 150 3318 a 150
3318 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.23) cvn H.B /DEST pdfmark end
 150 3318 a 0 TeXcolorgray 206 3452 a Ff(3\))p
0 TeXcolorgray 40 w(K)n(ernel)i(Stack:)h(the)f(per)n(-thread)f(e)o(x)o
(ecution)f(stack)j(for)e(the)i(k)o(ernel)150 3470 y
SDict begin H.S end
 150
3470 a 150 3470 a
SDict begin 18 H.A end
 150 3470 a 150 3470 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.24) cvn H.B /DEST pdfmark end
 150 3470 a 0
TeXcolorgray 206 3602 a Ff(4\))p 0 TeXcolorgray 40 w(Machine)f(state:)h
(The)f(machine-dependent)c(thread)k(information[)p 0 1 0
TeXcolorrgb 2337 3602 a
SDict begin H.S end
 2337 3602 a 0 1 0 TeXcolorrgb
Ff(2)p 0 1 0 TeXcolorrgb 2375 3545 a
SDict begin H.R end
 2375 3545 a 2375
3602 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[2]) cvn H.B /ANN pdfmark end
 2375 3602 a 0 TeXcolorgray Ff(])150 4037 y(The)i
Fb(kthread_add\(\))e Ff(is)j(used)f(to)g(create)g(a)h(k)o(ernel)e
(thread.)g(And)h(the)g(ne)n(w)g(thread)f(rund)g(in)h(k)o(ernle)g(mode)f
(only)-5 b(.)150 4187 y(It)39 b(is)h(alter)f(then)f(added)g(to)h(the)f
(process)h(speci\002ed)f(by)h(procp)e(ar)o(gument.)f(if)j(this)h
(thread)e(w)o(anted)g(to)h(be)g(started)150 4336 y(then)28
b Fb(kthread_start\(\))f Ff(is)j(used.)e(The)h(structures)f(used)g(by)h
(this)g(function)e(includes)h(name)h(of)f(the)h(thread,)f(the)150
4485 y(function)i(for)h(this)h(thread)f(to)h(run.)f(Later)g(the)h
(caller)g(must)f Fb(sched_add\(\))g Ff(to)g(start)i(the)e(k)o(ernel.)g
(POSIX)h(threads)150 4635 y(can)c(also)h(be)g(created)e(using)h
(FreeBSD.)150 4653 y
SDict begin H.S end
 150 4653 a 150 4653 a
SDict begin 18 H.A end
 150 4653 a
150 4653 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.7) cvn H.B /DEST pdfmark end
 150 4653 a 251 x Fc(CPU)35 b(Sc)o(heduling:)46
b Ff(K)n(ernel)34 b(switches)h(among)e(threads)h(in)h(an)f(ef)n(fort)g
(to)g(share)h(CPU)g(ef)n(fecti)n(v)o(ely;)e(this)i(acti)n(vity)g(is)150
5054 y(called)40 b(conte)o(xt)e(switching.)h(Swithing)h(between)f
(thread)f(can)i(occir)f(synchronously)e(or)j(asynchronously)-5
b(.)35 b(Mute)o(x)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.6) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(6)p 0 TeXcolorgray 150 100
a Ff(Synchronization)25 b(can)k(be)f(used)g(for)g(short-term)f(thread)h
(sychronization.i)150 369 y(There)j(are)g(number)f(of)h(w)o(ays)g(the)h
(scheduling)e(can)h(be)g(done,)f(lik)o(e)i(timeshare)f(thread)f
(scheduling,)g(multiprocessor)150 519 y(scheduling,)d(adapti)n(v)o(e)g
(idle)h(and)g(T)m(raditional)f(T)m(imeshare)h(Thread)f(Scheduling.)150
937 y(F)o(or)36 b(e)o(xample)e(multiprocessor)g(scheduling)g(is)j(used)
f(when)f(a)h(runnable)e(as)j(a)f(result)g(of)g(w)o(ak)o(eup,)e(unlock,)
h(thread)150 1087 y(creation,)f(or)i(other)f(e)n(v)o(ent)g(is)h(called)
g(by)f Fb(sched_pickcpu\(\))f Ff(The)h(best)h(CPU)h(to)f(run)f(is)h
(chosen\(if)e(there)i(are)150 1236 y(multiple)d(processors.\))e(The)i
(whole)g(system)g(is)i(searched)d(for)g(a)i(least)g(loaded)e(CPU,)i
(and)f(also)h(checks)e(to)i(see)g(the)150 1386 y(priority)27
b(of)h(the)h(threads)f(its)h(running.)d(Using)j(se)n(v)o(eral)f
(algorithms)f(it)i(decides)f(the)h(best)f(\002t)i(CPU)f(for)f(the)h(w)o
(ork.[)p 0 1 0 TeXcolorrgb 3626 1386 a
SDict begin H.S end
 3626 1386 a 0 1 0
TeXcolorrgb Ff(2)p 0 1 0 TeXcolorrgb 3665 1329 a
SDict begin H.R end
 3665
1329 a 3665 1386 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.[2]) cvn H.B /ANN pdfmark end
 3665 1386 a 0 TeXcolorgray Ff(])150
1786 y Fc(Answer)g(to)g(the)f(questions)150 1829 y
SDict begin H.S end
 150
1829 a 150 1829 a
SDict begin 18 H.A end
 150 1829 a 150 1829 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.8) cvn H.B /DEST pdfmark end
 150 1829 a 252
x Fc(W)-5 b(indows)150 2109 y
SDict begin H.S end
 150 2109 a 150 2109 a
SDict begin 18 H.A end
 150
2109 a 150 2109 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.9) cvn H.B /DEST pdfmark end
 150 2109 a 150 2109 a
SDict begin H.S end
 150 2109 a 150
2109 a
SDict begin 18 H.A end
 150 2109 a 150 2109 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.10) cvn H.B /DEST pdfmark end
 150 2109 a 268 x Fc(How)28
b(is)g(it)g(dif)o(fer)m(ent)e(compar)m(ed)g(to)h(Linux?)f(and)h(How)g
(is)h(is)g(similar)g(to)g(Linux?)e(and)g(Why?:)41 b Ff(Process)27
b(and)g(Threads:)150 2527 y(In)j(W)m(indo)n(ws)g(a)h(process)g(hold)f
(the)g(address)g(space,)h(handle)e(table,)i(statistics)h(and)e(at)h
(least)h(one)e(thread)f(and)h(it)i(does)150 2676 y(not)e(inherent)f
(parent/child)g(relationship.)g(While)i(Linux)f(process)g(is)h(called)g
(a)g(task)g(and)f(although)f(it)i(also)g(hold)f(the)150
2825 y(informations)36 b(basic)j(address)f(space,)g(handle)f(table)h
(and)g(statistics)i(it)f(does)f(not)g(ha)n(v)o(e)g(to)g(ha)n(v)o(e)g(a)
h(thread.)e(Linux)150 2975 y(does)29 b(inherent)f(parent.child)f
(relationship)h(and)h(uses)h(basic)f(scheduling)f(unit)h(to)g(schedule)
f(tasks.)i(Inlinux)e(there)h(are)150 3124 y(no)34 b(threads)g(per)n
(-se,)g(tasks)h(can)g(act)g(lik)o(e)f(W)m(indo)n(ws)g(threads)g(by)h
(sharing)e(handle)h(table,)g(PID)h(and)f(address)g(space.)150
3274 y(W)m(indo)n(ws)f(uses)h(basic)g(scheduling)e(unit)h(to)h
(schedule)f(threads)g(and)g(Fibers)h(are)g(used)f(for)g(cooperati)n(v)o
(e)e(user)n(-mode)150 3423 y(threads)d(while)g(Pthreats)h(are)f(used)h
(for)e(Linux)h(for)g(cooperati)n(v)o(e)e(user)n(-mode)h(threads)150
3693 y(CPU)34 b(Scheduling:)d(In)h(W)m(indo)n(ws)h(there)f(are)h(2)g
(scheduling)e(classes:)j(Real-time)e(and)h(Dynamic,)e(while)i(Linux)f
(can)150 3842 y(ha)n(v)o(e)24 b(3)g(scheduling)e(classes,)j(normal,)e
(\002x)o(ed)g(round)g(robin)g(and)g(\002x)o(ed)h(\002fo.)g(W)m(indo)n
(ws)f(f)o(a)n(v)n(ors)h(higher)f(priorities)h(while)150
3991 y(threads)29 b(f)o(a)n(v)n(or)g(lo)n(wer)g(priorities.)g(In)g
(linux)f(priorities)h(of)h(normal)e(threads)h(decay)f(as)i(the)o(y)f
(use)h(CPU,)g(and)f(priorities)150 4141 y(of)f(interacti)n(v)o(e)g
(threads)g(boost.)g(In)h(W)m(indo)n(ws)f(prioritie)g(of)g(dynamic)f
(threads)h(get)h(boosted)f(on)g(w)o(ak)o(eups)g(and)h(thread)150
4290 y(prioroties)23 b(are)h(ne)n(v)o(er)f(lo)n(wered.)g(In)i(both)e
(operating)g(systems)h(the)h(ne)n(wly)f(created)f(thread)h(starts)h
(with)f(a)h(base)g(priority)-5 b(.)150 4560 y(Although)34
b(the)o(y)h(ha)n(v)o(e)g(dif)n(ferences)f(between)g(each)i(other)m(,)e
(a)i(user)f(can)h(ultimately)f(accomplish)f(the)h(same)h(things.)150
4709 y(It)41 b(is)h(a)f(matter)f(of)g(what)h(you)f(need)g(and)g(if)h
(possible)f(to)h(kno)n(w)-5 b(,)39 b(w)o(ant)i(to)g(use.)g(W)-7
b(e)41 b(must)g(understand)e(that)h(al-)150 4859 y(though)27
b(the)h(functions)f(w)o(ork)h(dif)n(ferently)f(the)o(y)g(ultimately)h
(try)g(to)h(accomplish)e(the)i(same)g(end)f(result.)g(F)o(or)g(e)o
(xample)150 5008 y Fb(pthread_create)e Ff(and)i Fb(CreateThread)f
Ff(are)i(really)f(similar)g(ho)n(we)n(v)o(er)f(the)o(y)h(ha)n(v)o(e)g
(dif)n(ferent)e(parameters.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -223 a
SDict begin H.S end
 150 -223 a 0 TeXcolorgray 0
TeXcolorgray 150 -223 a
SDict begin H.R end
 150 -223 a 150 -223 a
SDict begin [ /View [/XYZ H.V] /Dest (page.7) cvn H.B /DEST pdfmark end
 150 -223
a 0 TeXcolorgray 3571 w Fe(7)p 0 TeXcolorgray 150 100
a Fc(F)-5 b(r)m(eeBSD)150 127 y
SDict begin H.S end
 150 127 a 150 127 a
SDict begin 18 H.A end
 150
127 a 150 127 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.11) cvn H.B /DEST pdfmark end
 150 127 a 150 127 a
SDict begin H.S end
 150 127 a 150 127
a
SDict begin 18 H.A end
 150 127 a 150 127 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.12) cvn H.B /DEST pdfmark end
 150 127 a 268 x Fc(How)31 b(is)g(it)f(didder)m
(ent)f(compar)m(ed)g(to)h(Linux?)g(and)f(How)h(is)i(it)e(similar)h(to)g
(Linux?)e(and)g(Why?:)44 b Ff(Freebsd)29 b(and)h(Linux)150
545 y(ha)n(v)o(e)i(dif)n(ferent)e(CPU)k(scheduler)m(,)c(this)j(mainly)f
(impacts)g(the)g(process)g(management,)e(speci\002cally)i(with)h(re)o
(gards)d(to)150 694 y(multicore)35 b(scnarious.)g(As)j(mentioned)c(abo)
o(v)o(e)h(FreeBSD)i(uses)g(alot)f(of)g(dif)n(ferent)f(kinds)h(of)g
(algorithms)f(for)h(CPU)150 844 y(scheduling.)25 b(The)i(similarity)h
(between)e(each)h(other)g(is)h(that)g(the)o(ya)e(r)i(eboth)e(POSIX)i
(systems.)f(If)h(we)f(are)h(to)f(compare)150 993 y(def)o(ault)j
(scheduler)g(for)h(both)f(systems)i(Linux)e(uses)i(CFS)g(while)f
(FreeBSD)h(uses)g(ULE.)f(Although)e(ULE)i(is)h(similar)150
1142 y(to)d(CFS)g(it)h(can)e(be)g(instructed)g(to)g(f)o(a)n(v)n(or)h
(interacti)n(v)o(e)e(processes.)1717 1524 y(R)t Fd(E)t(F)t(E)t(R)t(E)t
(N)t(C)t(E)t(S)150 1551 y
SDict begin H.S end
 150 1551 a 150 1551 a
SDict begin 18 H.A end
 150 1551
a 150 1551 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.13) cvn H.B /DEST pdfmark end
 150 1551 a 150 1671 a
SDict begin H.S end
 150 1671 a 150 1671
a
SDict begin 13.5 H.A end
 150 1671 a 150 1671 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.[1]) cvn H.B /DEST pdfmark end
 150 1671 a 0 TeXcolorgray 111
x Fd([1])p 0 TeXcolorgray 42 w(D.)c(S.)g(Mark)h(Russino)o(vich)h(and)f
(A.)f(Ionescu,)i Fa(W)l(indows)g(Internals,)g(P)-5 b(art)23
b(1)g(6/e)p Fd(.)67 b(Microsoft)25 b(Press,)e(2012.)150
1792 y
SDict begin H.S end
 150 1792 a 150 1792 a
SDict begin 13.5 H.A end
 150 1792 a 150 1792 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.[2]) cvn H.B /DEST pdfmark end
 150
1792 a 0 TeXcolorgray 102 x Fd([2])p 0 TeXcolorgray 42
w(M.)g(K.)g(McCusick)j(and)e(G.)f(V)-9 b(.)23 b(Ne)n(ville-Neil,)28
b Fa(Design)d(and)f(Implementation)j(of)d(the)h(F)l(r)n(eeBSD)e(Oper)o
(ating)j(System)f(2/e)p Fd(.)68 b(Addison-W)-5 b(esle)o(y)l(,)269
2006 y(2015.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
